function eymo = extracteyemovementssubj(subj)
% function eymo = extracteyemovementssubj(subj)
% Extract eye movment features for a subj and save the results to
% <subj>_eymo.mat
%
% <subj>_prep.mat must exist (generated by preprocesssubj)

% 4/2011 bst wrote it
% 9/2011 bst modified it to make use of artifact markings for saccade detection

s = load([subj '_prep.mat']);
dat = s.dat;
for p = 1:size(dat,3)
    for b = 1:size(dat,2)
        for t = 1:size(dat,1)
            if isempty(dat(t,b,p).gaze)
                continue
            end
            gaze = dat(t,b,p).gaze;
            gaze(:,4) = 0;
%             if isfield(dat,'artifact')
%                 gaze = [gaze dat(t,b,p).artifact];
%             end
            % find saccades
            sac = findsaccades(gaze);
            gaze(:,4) = 0; % erase artifact marking
            % mark all saccade boundary
            if ~isempty(sac)
                idx = [];
                for i=1:numel(sac.starti)
                    idx = [idx, sac.starti(i):sac.endi(i)];
                end
                gaze(:,4) = 0;
                gaze(idx,4) = 1; % mark the saccades
            else
                msg = sprintf('%s: No saccade detected in block %d, trial %d, phase %d\n',subj,b,t,p);
                warning(msg);
            end
            % find fixations
            fxa = findfixations(gaze);
            if isempty(fxa)
                msg = sprintf('%s: No fixation detected in block %d, trial %d, phase %d\n',subj,b,t,p);
                warning(msg);
            end
            if ~isempty(sac)
                eymo.sac(t,b,p) = sac;
            end
            if ~isempty(fxa)
                eymo.fxa(t,b,p) = fxa;
            end
        end
    end
end
save([subj '_eymo.mat'], 'eymo');